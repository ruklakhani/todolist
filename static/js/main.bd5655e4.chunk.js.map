{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","addTodo","useState","id","task","completed","todo","setTodo","onSubmit","e","preventDefault","trim","uuid","v4","class","name","type","value","onChange","target","Todo","toggleComplete","removeTodo","onClick","style","textDecoration","TodoList","todos","map","LOCAL_STORAGE_KEY","App","setTodos","useEffect","storageTodos","JSON","parse","localStorage","getItem","setItem","stringify","className","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAyCeA,MAtCf,YAA+B,IAAXC,EAAU,EAAVA,QAAU,EACFC,mBAAS,CAC7BC,GAAI,GACJC,KAAM,GACNC,WAAW,IAJW,mBACnBC,EADmB,KACbC,EADa,KAoB1B,OACI,sBAAMC,SAVV,SAAsBC,GAClBA,EAAEC,iBACEJ,EAAKF,KAAKO,SACVV,EAAQ,2BAAKK,GAAN,IAAYH,GAAIS,IAAKC,QAE5BN,EAAQ,2BAAKD,GAAN,IAAYF,KAAM,QAK7B,SAEI,sBAAKU,MAAM,mBAAX,UACI,uBACIC,KAAK,OACLC,KAAK,OACLC,MAAOX,EAAKF,KACZc,SArBhB,SAA+BT,GAC3BF,EAAQ,2BAAKD,GAAN,IAAYF,KAAMK,EAAEU,OAAOF,UAqBtBH,MAAM,iBACV,qBAAKA,MAAM,qBAAX,SACI,wBAAQE,KAAK,SAASF,MAAM,wBAA5B,yBCcLM,MA9Cf,YAAoD,IAApCd,EAAmC,EAAnCA,KAAMe,EAA6B,EAA7BA,eAAgBC,EAAa,EAAbA,WASlC,OAEI,sBAAKR,MAAM,4BAAX,UACI,sBAAKA,MAAM,gCAAX,UACI,uBAAOE,KAAK,WAAWO,QAZnC,WACIF,EAAef,EAAKH,OAYZ,qBAAKW,MAAM,gBAAX,SACI,gCACI,sBAAMA,MAAM,uBAAuBU,MAAO,CAC1CC,eAAgBnB,EAAKD,UAAY,eAAiB,MADlD,SAGKC,EAAKF,cAMtB,wBAAQU,MAAM,wBACVE,KAAK,SACLO,QAtBZ,WACID,EAAWhB,EAAKH,KAmBZ,mBCTGuB,MAff,YAA0D,IAAtCC,EAAqC,EAArCA,MAAON,EAA8B,EAA9BA,eAAgBC,EAAc,EAAdA,WACvC,OACI,8BACKK,EAAMC,KAAI,SAAAtB,GAAI,OACX,cAAC,EAAD,CAEAA,KAAMA,EACNe,eAAgBA,EAChBC,WAAYA,GAHPhB,EAAKH,UCFpB0B,EAAoB,cAqDXC,MAnDf,WAAgB,IAAD,EACa5B,mBAAS,IADtB,mBACNyB,EADM,KACCI,EADD,KAoCb,OAjCAC,qBAAU,WACR,IAAMC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQR,IACjDI,GACFF,EAASE,KAEV,IAEHD,qBAAU,WACRI,aAAaE,QAAQT,EAAmBK,KAAKK,UAAUZ,MACtD,CAACA,IAyBF,qBAAKa,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qCACA,cAAC,EAAD,CAAUvC,QA1BhB,SAAiBK,GACfyB,EAAS,CAACzB,GAAF,mBAAWqB,QA0Bf,cAAC,EAAD,CACEA,MAAOA,EACPN,eAzBR,SAAwBlB,GACtB4B,EACEJ,EAAMC,KAAI,SAAAtB,GACR,OAAGA,EAAKH,KAAOA,EACN,2BACFG,GADL,IAEED,WAAYC,EAAKD,YAGdC,OAiBLgB,WAZR,SAAoBnB,GAClB4B,EAASJ,EAAMc,QAAO,SAAAnC,GAAI,OAAIA,EAAKH,KAAOA,eC7B/BuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bd5655e4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport uuid from \"uuid\";\n\nfunction TodoForm({ addTodo }){\n    const [todo, setTodo] = useState({\n        id: \"\",\n        task: \"\",\n        completed: false\n    });\n\n    function handleTaskInputChange(e) {\n        setTodo({ ...todo, task: e.target.value });\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (todo.task.trim()) {\n            addTodo({ ...todo, id: uuid.v4() });\n            // reset task input\n            setTodo({ ...todo, task: \"\"});\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n\n            <div class=\"input-group mb-3\">\n                <input \n                    name=\"task\"\n                    type=\"text\"\n                    value={todo.task}\n                    onChange={handleTaskInputChange} \n                    class=\"form-control\"/>\n                <div class=\"input-group-append\">\n                    <button type=\"submit\" class=\"btn btn-outline-light\">Add</button>\n                </div>\n            </div>\n        </form>\n    );\n}\n\nexport default TodoForm;","import React from \"react\";\n\nfunction Todo({ todo, toggleComplete, removeTodo}) {\n    function handleCheckboxClick() {\n        toggleComplete(todo.id);\n    }\n\n    function handleRemoveClick() {\n        removeTodo(todo.id);\n    }\n\n    return (\n\n        <div class=\"d-flex align-items-center\">\n            <div class=\"pretty p-curve p-default mr-2\">\n                <input type=\"checkbox\" onClick={handleCheckboxClick}/>\n                <div class=\"state p-light\">\n                    <label>\n                        <span class=\"text text-white mx-2\" style={{\n                        textDecoration: todo.completed ? \"line-through\" : null\n                            }}>\n                            {todo.task}\n                        </span>\n                    </label>\n                </div>\n            </div>\n        \n            <button class=\"btn btn-outline-light\" \n                type=\"button\" \n                onClick={handleRemoveClick}>\n                X\n            </button>\n        </div>\n\n\n        // <div style={{ display: \"flex\" }}>\n        //     <input type=\"checkbox\" onClick={handleCheckboxClick} />\n        //     <li\n        //         style={{\n        //             color: \"white\",\n        //             textDecoration: todo.completed ? \"line-through\" : null\n        //         }}>\n        //         {todo.task}</li>\n        //     <button onClick={handleRemoveClick}>x</button>\n        // </div>\n    )\n}\n\nexport default Todo;","import React from \"react\";\nimport Todo from \"./Todo\";\n\nfunction TodoList({ todos, toggleComplete, removeTodo }) {\n    return (\n        <div>\n            {todos.map(todo => (\n                <Todo \n                key={todo.id} \n                todo={todo} \n                toggleComplete={toggleComplete}\n                removeTodo={removeTodo}\n                />\n            ))}\n        </div>\n    );\n}\n\nexport default TodoList;","// import logo from './logo.svg';\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\n\nconst LOCAL_STORAGE_KEY = \"final-todos\"\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storageTodos) {\n      setTodos(storageTodos);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function addTodo(todo) {\n    setTodos([todo, ...todos]);\n  }\n\n  function toggleComplete(id) {\n    setTodos(\n      todos.map(todo => {\n        if(todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed\n          }\n        }\n        return todo;\n      })\n    );\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>Todo</p>\n        <TodoForm addTodo={addTodo} />\n        <TodoList \n          todos={todos} \n          toggleComplete={toggleComplete}\n          removeTodo={removeTodo}\n          />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}